<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;RegexTestStrings&apos; to &apos;Test&apos;&#x0A;- Original project: &apos;Test&apos;&#x0A;- Original element: &apos;RegexTestStrings&apos;&#x0A;- Renamed element: &apos;Test&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;RegexTestStrings&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;{RegexTestStrings.java[RegexTestStrings" matchStrategy="1" name="Test" qualified="false" references="true" similarDeclarations="false" stamp="1491724222831" textual="false" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;RegexFile.txt&apos; to &apos;Java/src&apos;&#x0A;- Original project: &apos;Test&apos;&#x0A;- Destination element: &apos;Java/src&apos;&#x0A;- Original element: &apos;RegexFile.txt&apos;&#x0A;- Update references to refactored element" description="Move file" destination="=Java/src" element1="src/RegexFile.txt" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1491796414528" units="0" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;Test&apos;&#x0A;- Original project: &apos;Test&apos;&#x0A;- Original elements:&#x0A;     Test/src/(default package)&#x0A;- Assume clone() returns an instance of the receiver type&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1491829656937" version="1.0"/>
</session>