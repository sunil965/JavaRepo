import java.util.Scanner;


public class UtilitySort 
{
	// Insertion SORT for String.
	public static void sort(String a[] , int n)
	{
		for(int i=1; i<n; i++){
			String data = a[i];
			int hole = i;
			
			while((hole>0) && (data.compareTo(a[hole-1]))<0)
			{
				a[hole] = a[hole-1];
				hole--;
			}
			a[hole] = data;
		}
}
	
  // Binary search meathod for STRING.
	public static int binarySearch(String array[], String value)
	  {
	      int first = 0;
	      int last = array.length - 1;		    
		  while(first < last)
			{
				int mid = first + (last - first)/2;
				if(value.compareTo(array[mid])==0)
					return mid;
				
			        if(value.compareTo(array[mid])<0)
					last = mid-1; 
			        else
			          first = mid+1;
			 }
		     return -1;
			
	   }
	
	
	// Binary search method for INTEGER
    public int secret(int low, int high)
    {
		
		
		if((high - low)==1)		
			return low;		
		int mid = low + (high - low)/2;
		System.out.println("Is less then "+mid);		
		Scanner sc = new Scanner(System.in);
		if(status = sc.nextBoolean())
					return secret(low, mid );
				else 
					return secret(mid,high);

	}
  
  public static void main(String[] args)
  {
	  Scanner scan = new Scanner(System.in);
      System.out.println("Utility\n");          
      char ch;
      while(ch == 'Y'|| ch == 'y')    
      {
          System.out.println("\nWhich Operations you want ?\n");
          System.out.println("1. InsertionSort method for integer ");
          System.out.println("2. insertionSort method for string");
          System.out.println("3. bubbleSort method for integer");
          System.out.println("4. bubbleSort method for integer");
          System.out.println("5. binarySearch method for String"); 

          int choice = scan.nextInt();            
          switch (choice)
          {
          case 1 :  Scanner sc = new Scanner(System.in);
		    		System.out.println("No of string ?");
		    		int number = sc.nextInt();		    		
		    		String[] arr = new String[number];
		    		System.out.println("Enter Strings ");
		    		for(int k=0; k<4; k++)
		    		{ arr[k]=sc.next(); }
		    		int n = arr.length;
		    		sort(arr, n);		    		
		    		   System.out.println("\n Array after sorting...");
		    			for(String a:arr){
		    				System.out.print(a+ " ");
		    			}      		                  
              break;
              
          case 2 : Scanner sc1 = new Scanner(System.in);
			  		System.out.println("No of string ?");
			  		int number1 = sc1.nextInt();		    		
			  		String[] arr1 = new String[number];
			  		System.out.println("Enter Strings ");
			  		for(int k=0; k<4; k++)
			  		{ arr1[k]=sc.next(); }
			  		int n1 = arr1.length;                   
              break;                         
              
              
          case 3 : 
              System.out.println("Enter integer element to search");
              System.out.println("Search result : "+ bst.search( scan.nextInt() ));
              break;                                          
          case 4 : 
              System.out.println("Nodes = "+ bst.countNodes());
              break;     
          case 5 :  
              System.out.println("Empty status = "+ bst.isEmpty());
              break;            
          default : 
              System.out.println("Wrong Entry \n ");
              break;   
          }
          System.out.println("\nDo you want to continue (Type y or n) \n");
          ch = scan.next().charAt(0);                        
      } 
  }
}
