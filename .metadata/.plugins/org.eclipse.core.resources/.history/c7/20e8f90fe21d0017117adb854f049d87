package com.bridgelabz.java;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import com.bridgelabz.utlity.Utility;

public class Hashmapping {

	@SuppressWarnings("unchecked")
	public static void main(String[] args) {
		Utility utility = new Utility();
		try {
			FileWriter fileWriter = new FileWriter(new File("/home/bridgeit/JavaRepo/Java/src/HashFile.txt"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		String string = utility.readFileContent("/home/bridgeit/JavaRepo/Java/src/HashFile.txt");
		String[] strArray = string.split(",");
		int[] intarray = new int[strArray.length];
		
		                             // copying element from string array to int array.
		for(int i=0;i<strArray.length;i++) {
			intarray[i] = Integer.parseInt(strArray[i]);
		   }  	
		System.out.println("How many slots ?");
		int nSlots = utility.getInteger();		
		HashMap<Integer, ArrayList<Integer>> hash = new HashMap<Integer, ArrayList<Integer>>();
		ArrayList<Integer>[] listToInsert = new ArrayList[nSlots];
		
		int slotNumber;
		
		for(int i=0;i<intarray.length; i++)	{            
			slotNumber = intarray[i]%11;  // remainder will be the slot number.
			if(listToInsert[slotNumber]==null) {
			   listToInsert[slotNumber] = new ArrayList<Integer>();
			   hash.put(slotNumber, listToInsert[slotNumber]);
			}
			   listToInsert[slotNumber].add(intarray[i]);
		}
		
		System.out.println("Hashmap With Repeated Element"+hash);
		
			
		for (int j = 0; j < hash.size(); j++) {
			System.out.println("\nEnter Number you want to search or delete");
			int num = utility.getInteger();
			int hashSlot = intarray[j]%11;	
		
			ArrayList<Integer> numberList1 = hash.get(hashSlot);
		    System.out.println(numberList1);
			if(numberList1.contains(num)) {
				numberList1.remove(j);
				break;
			  }
			else { 
				numberList1.add(num);
//				hash.put(nSlots,num);
			  }
			System.out.println(hash);
        }
		System.out.println("Hashmap Without Repeated Element"+hash);
		
		
	}
}
