package com.bridgelabz.java;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;

import com.bridgelabz.utlity.Utility;

public class Hashmapping {
	
	@SuppressWarnings("unchecked")
	public static void main(String[] args) {
		Utility ul = new Utility();
		String string = ul.readFileContent("/home/bridgeit/JavaRepo/Java/src/HashFile.txt");
		String[] strArray = string.split(",");
		int[] intarray = new int[strArray.length];
		
		                             // copying element from string array to int array.
		for(int i=0;i<strArray.length;i++)
		   {
			intarray[i] = Integer.parseInt(strArray[i]);
		   }  	
		System.out.println("How many slots ?");
		int nSlots = ul.getInteger();		
		HashMap<Integer, ArrayList<Integer>> hash = new HashMap<Integer, ArrayList<Integer>>();
		ArrayList<Integer>[] hashList = new ArrayList[nSlots];
		
		int slotNumber;
		
		for(int i=0;i<intarray.length; i++)
		{            
			slotNumber = intarray[i]%11;  // remainder will be the slot number.
			if(hashList[slotNumber]==null)
			{
				hashList[slotNumber] = new ArrayList<Integer>();
			   hash.put(slotNumber, hashList[slotNumber]);
			}
			hashList[slotNumber].add(intarray[i]);
		}
		
		System.out.println("Hashmap With Repeated Element"+hash);
		
		for (int j = 0; j < nSlots; j++)
		{
			ArrayList<Integer> List1 = hashList[j];
			for (int i = 0; i < List1.size() - 1; i++) {
				for (int k = i + 1; k < List1.size(); k++) {
					if (List1.get(i) == List1.get(k)) {
						List1.remove(k);
						--k;
					} else
						continue;
				}
			}
			hash.put(j, List1);
       }
		System.out.println("Hashmap Without Repeated Element"+hash);
		
	}

}
